#!/bin/sh

defaultAudioFormat="mp3"
sampleRate=48000
lowerFrequency=853
upperFrequency=960
longLength=2
shortLength=1
pauseLength=0.5

intirimFormat="wav"
namePrefix="alert-"
lowerName="lower"
upperName="upper"
soundName="sound"
longName="long"
shortName="short"
pauseName="pause"
patternName="pattern"
signalName="signal"

programName="${0##*/}"

programMessage() {
   local message="${1}"

   echo >&2 "${programName}: ${message}"
}

syntaxError() {
   local message="${1}"

   programMessage "${message}"
   exit 2
}

showUsageSummary() {
cat <<END-OF-USAGE-SUMMARY
Usage: ${programName} [-option ...]
The following options may be specified:
-f format  specify the audio format (default is ${defaultAudioFormat})
-h         show this usage summary on standard output and then exit
-k         keep the intirim .${intirimFormat} files
-p         play the generated alert signal
END-OF-USAGE-SUMMARY
}

removeFiles() {
   "${keepIntirimFiles}" || {
      local name

      for name
      do
         rm "${namePrefix}${name}.${intirimFormat}"
      done
   }
}

makeTone() {
   local name="${1}"
   local frequency="${2}"
   local length="${3}"

   sox -n -r "${sampleRate}" \
       "${namePrefix}${name}.${intirimFormat}" \
       synth "${length}" sine "${frequency}"
}

makeSound() {
   local toName="${1}"
   shift 1

   local command=(sox --combine mix)
   local name

   for name in "${@}" "${toName}"
   do
      command+=("${namePrefix}${name}.${intirimFormat}")
   done

   "${command[@]}"
}

makeBurst() {
   local toName="${1}"
   local fromName="${2}"
   local length="${3}"

   sox "${namePrefix}${fromName}.${intirimFormat}" \
       "${namePrefix}${toName}.${intirimFormat}" \
       fade q 50s "${length}" 0.005
}

makePause() {
   local name="${1}"
   local length="${2}"

   sox -n "${namePrefix}${name}.${intirimFormat}" trim 0 "${length}"
}

makeSequence() {
   local toName="${1}"
   shift 1

   local command=(sox)
   local name

   for name in "${@}" "${toName}"
   do
      command+=("${namePrefix}${name}.${intirimFormat}")
   done

   "${command[@]}"
}

convertFormat() {
   local name="${1}"
   local fromExtension="${2}"
   local toExtension="${3}"

   name="${namePrefix}${name}"
   sox "${name}.${fromExtension}" "${name}.${toExtension}"
}

helpRequested=false
audioFormat="${defaultAudioFormat}"
keepIntirimFiles=false
playAlertSignal=false

while getopts ":f:hkp" option
do
   case "${option}"
   in
      f) audioFormat="${OPTARG}";;
      h) helpRequested=true;;
      k) keepIntirimFiles=true;;
      p) playAlertSignal=true;;

      :) syntaxError "missing operand: -${OPTARG}";;
     \?) syntaxError "unrecognized option: -${OPTARG}";;
      *) syntaxError "unimplemented option: -${option}";;
   esac
done

shift $((OPTIND - 1))
[ "${#}" -eq 0 ] || syntaxError "too many parameters: ${*}"

"${helpRequested}" && {
   showUsageSummary
   exit 0
}

makeTone "${lowerName}" "${lowerFrequency}" "${longLength}"
makeTone "${upperName}" "${upperFrequency}" "${longLength}"
makeSound "${soundName}" "${lowerName}" "${upperName}"
removeFiles "${lowerName}" "${upperName}" 

makeBurst "${longName}" "${soundName}" "${longLength}"
makeBurst "${shortName}" "${soundName}" "${shortLength}"
removeFiles "${soundName}" 

makePause "${pauseName}" "${pauseLength}"
makeSequence "${patternName}" "${longName}" "${pauseName}" "${shortName}" "${pauseName}" "${shortName}" "${pauseName}"
removeFiles "${longName}" "${shortName}" "${pauseName}" 

makeSequence "${signalName}" "${patternName}" "${patternName}"
removeFiles "${patternName}" 

[ "${audioFormat}" = "${intirimFormat}" ] || {
   convertFormat "${signalName}" "${intirimFormat}" "${audioFormat}"
   removeFiles "${signalName}"
}

"${playAlertSignal}" && {
   vlc --quiet --intf dummy "${namePrefix}${signalName}.${audioFormat}" vlc://quit
}

exit 0
