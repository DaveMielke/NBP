#!/bin/bash

. "${0%/*}/prologue.sh"
includeScriptLibraries command arguments filter

showCommandSpecificOptionsUsageSummary() {
cat <<END-OF-COMMAND-SPECIFIC-OPTIONS-USAGE-SUMMARY
-c path        the configuration directory (default is ${defaultConfigurationDirectory})
-d path        the data directory (default is ${defaultDataDirectory})
-R             remove the files that are rejected by the filter

If no alert files are specified then all of them are analyzed.
END-OF-COMMAND-SPECIFIC-OPTIONS-USAGE-SUMMARY
}

configurationDirectory=""
handleCommandOption_c() {
   configurationDirectory="${OPTARG}"
}

dataDirectory=""
handleCommandOption_d() {
   dataDirectory="${OPTARG}"
}

removeFiles=false
handleCommandOption_R() {
   removeFiles=true
}

handlePositionalCommandArguments() {
   alertFiles=("${@}")
}

handleCommandArguments "c:d:R" "[alert-file ...]" "${@}"

[ -n "${configurationDirectory}" ] || configurationDirectory="${defaultConfigurationDirectory}"
verifyReadableDirectory "${configurationDirectory}"
logDebug "configuration-directory ${configurationDirectory}"
processConfigurationFile "${configurationDirectory}"

[ -n "${dataDirectory}" ] || dataDirectory="${defaultDataDirectory}"
verifyWritableDirectory "${dataDirectory}"
logDebug "data-directory ${dataDirectory}"

[ "${#alertFiles[*]}" -gt 0 ] || {
   cd "${dataDirectory}"
   alertFiles=(*".${alertFileExtension}")
}

acceptCount=0
rejectCount=0
skipCount="${#alertFiles[*]}"

for file in "${alertFiles[@]}"
do
   [ -e "${file}" ] || {
      logWarning "file not found: ${file}"
      continue
   }

   [ -f "${file}" ] || {
      logWarning "not a file: ${file}"
      continue
   }

   [ -r "${file}" ] || {
      logWarning "file not readable: ${file}"
      continue
   }

   if acceptAlert "${file}"
   then
      let acceptCount+=1
   else
      let rejectCount+=1

      "${removeFiles}" && {
         logInfo "removing alert file: ${file}"
         rm -f -- "${file}"
      }
   fi

   let skipCount-=1 || :
done

logInfo "summary: Accept:${acceptCount} Reject:${rejectCount} Skip:${skipCount}"
exit 0
