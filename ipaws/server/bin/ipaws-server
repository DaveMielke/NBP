#!/bin/bash

. "${0%/*}/prologue.sh"
verifyCommands ncat
includeScriptLibraries command arguments locks

readonly defaultPortNumber=14216
readonly defaultRetrieveInterval=30

showCommandSpecificOptionsUsageSummary() {
cat <<END-OF-COMMAND-SPECIFIC-OPTIONS-USAGE-SUMMARY
-c path     the configuration directory (default is ${defaultConfigurationDirectory})
-d path     the data directory (default is ${defaultDataDirectory})
-p port     the port number to listen on (default is ${defaultPortNumber})
-r seconds  the alerts retrieval interval (default is ${defaultRetrieveInterval})
END-OF-COMMAND-SPECIFIC-OPTIONS-USAGE-SUMMARY
}

writeLog() {
   local currentName=""

   while read -r line
   do
      local newName
      printf -v newName "%(%Y%m%d)T" -1

      [ "${newName}" != "${currentNae}" ] && {
         currentName="${newName}"
         exec >>"${dataDirectory}/${currentName}.log"
      }

      echo -E "${line}"
   done
}

makeCommand() {
   local script="${1}"
   shift 1
   command=("${programDirectory}/${script}" -v -c "${configurationDirectory}" -d "${dataDirectory}" "${@}")
}

runScript() {
   makeCommand "${@}"
   "${command[@]}" || return "${?}"
}

retrieveAlerts() {
   while :
   do
      runScript ipaws-retrieve -T && runScript ipaws-extract &
      sleep "${retrieveInterval}"
   done
}

awaitClients() {
   makeCommand ipaws-session
   ncat -l "${portNumber}" --keep-open --sh-exec "${command[*]}"
}

configurationDirectory=""
dataDirectory=""
portNumber=""
retrieveInterval=""

handleCommandOption_c() {
   configurationDirectory="${OPTARG}"
}

handleCommandOption_d() {
   dataDirectory="${OPTARG}"
}

handleCommandOption_p() {
   portNumber="${OPTARG}"
}

handleCommandOption_r() {
   retrieveInterval="${OPTARG}"
}

handleCommandArguments "c:d:p:r:" "" "${@}"

[ -n "${configurationDirectory}" ] || configurationDirectory="${defaultConfigurationDirectory}"
verifyReadableDirectory "${configurationDirectory}"
logDebug "configuration-directory ${configurationDirectory}"
processConfigurationFile "${configurationDirectory}"

[ -n "${dataDirectory}" ] || dataDirectory="${defaultDataDirectory}"
verifyWritableDirectory "${dataDirectory}"
logDebug "data-directory ${dataDirectory}"

[ -n "${portNumber}" ] || portNumber="${defaultPortNumber}"
verifyIntegerValue "${portNumber}" "port number" 1024 65535
logDebug "port-number ${portNumber}"

[ -n "${retrieveInterval}" ] || retrieveInterval="${defaultRetrieveInterval}"
verifyIntegerValue "${retrieveInterval}" "retrieve interval" 15
logDebug "retrieve-interval ${retrieveInterval}"

attemptExclusiveLock lock server || semanticError "already running"
executeOnExit releaseLock "${lock}"

umask 022
exec 2> >(writeLog)

retrieveAlerts &
awaitClients &
wait

exit 0
