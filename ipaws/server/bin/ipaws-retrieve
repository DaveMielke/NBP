#!/bin/bash

. "${0%/*}/prologue.sh"
verifyCommandAvailability curl
requireScriptLibraries command arguments options-common options-retrieve time

showCommandUsageSummary() {
   showRetrieveUsageSummary
}

retrieveAlerts() {
   local type

   for type
   do
      logDebug "server-type ${type}"
      local name="${configuredOptions["${type}-server"]}"
      [ -n "${name}" ] || semanticError "server type not defined: ${type}"
      logDebug "server-name ${name}"

      local url="https://${name}"
      url+="/IPAWSOPEN_EAS_SERVICE/rest/"
      url+="${alertCategory}"
      url+="/recent/${requestTime}"
      logDebug "request-url ${url}"

      local response=$(curl --silent --show-error --get --data-urlencode "pin=${requestPIN}" "${url}") || exit "${?}"
      [ -n "${response}" ] || responseError "no data received"
      [ "${response}" = "${response#<}" ] && responseError "${response}"

      if [ "${response}" != "${response#<?xml}" ]
      then
         local extension="${alertsFileExtension}"
      else
         local extension="${failureFileExtension}"
      fi

      local prefix="${currentTime}@${type}"
      local permanentFile="${dataDirectory}/${prefix}.${extension}"
      [ -e "${permanentFile}" ] && responseError "alerts file already exists: ${permanentFile}"
      logDebug "alerts-file ${permanentFile##*/}"

      local temporaryFile="${permanentFile%/*}/${alertsFileExtension}.retrieved"
      echo >"${temporaryFile}" "${response}" || exit "${?}"

      mv -- "${temporaryFile}" "${permanentFile}"
      chmod -- a-w "${permanentFile}"
      logInfo "new alert set: ${prefix##*/}"
   done
}

responseError() {
   local message="${1}"

   logError "${message}"
   exit 10
}

handleCommandArguments "" "${@}"
prepareCommonCommandOptions
failIfAlreadyRunning

readonly currentTime="$(utcTime)"
logDebug "current-time ${currentTime}"

readonly alertsFileList=( "${dataDirectory}/"${utcTimeGlob}"@"*".${alertsFileExtension}" )
readonly alertsFileCount="${#alertsFileList[*]}"

if [ "${alertsFileCount}" -gt 0 ]
then
   referenceTime="${alertsFileList[alertsFileCount-1]}"
   referenceTime="${referenceTime##*/}"
   referenceTime="${referenceTime%.*}"
   referenceTime="${referenceTime%@*}"
else
   referenceTime="${currentTime}"
fi

readonly referenceTime
logDebug "reference-time ${referenceTime}"

readonly alertCategories=("" "eas" "public_non_eas" "public")
index=0
"${getEmergencyAlerts}" && let index+=1
"${getGeneralAlerts}" && let index+=2
(( index )) || index=3
readonly alertCategory="${alertCategories[index]}"
[ -n "${alertCategory}" ] || semanticError "alert category combination not supported"

verifyIntegerValue "${minutesBefore}" "minutes before" 1
readonly requestTime="$(utcTime "${referenceTime} -${minutesBefore} minutes")"
logDebug "request-time ${requestTime}"

[ -n "${requestPIN}" ] || requestPIN="${configuredOptions["server-pin"]}"
[ -n "${requestPIN}" ] || semanticError "PIN not specified"

retrieveAlerts ${serverType//,/ }
logDebug "done"
exit 0
