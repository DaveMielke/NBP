#!/bin/bash

. "${0%/*}/prologue.sh"
verifyCommandAvailability inotifywait
includeScriptLibraries command arguments options-common

monitorAlertFiles() {
   coproc inotify {
      exec inotifywait --quiet --monitor \
      --format "%T %f % e" --timefmt "%Y-%m-%dT%H:%M:%S" \
      --event moved_to --event moved_from --event delete \
      -- .
   }

   local pid="${inotify_PID}"
   pushOnExitCommand kill -TERM "${pid}"
   eval exec "9<&${inotify[0]}"

   (
      local time file events
      set -- *".${alertFileExtension}"

      for file
      do
         handleAlertAdded "${file%.*}"
      done

      while read -u 9 -r time file events
      do
         [ "${file}" = "${file%.${alertFileExtension}}" ] && continue
         local identifier="${file%.*}"
         local event

         for event in ${events}
         do
            case "${event}"
            in
               MOVED_TO) handleAlertAdded "${identifier}";;
               MOVED_FROM) handleAlertRemoved "${identifier}";;
               DELETE) handleAlertRemoved "${identifier}";;
               *) logWarning "unhandled inotify event: ${event}: ${file}";;
            esac
         done
      done
   ) &

   eval exec "9<&-"
}

handleAlertAdded() {
   local identifier="${1}"

   echo "alert added: ${identifier}"
}

handleAlertRemoved() {
   local identifier="${1}"

   echo "alert removed: ${identifier}"
}

handleClientCommands() {
   local -a command

   while read -r -a command
   do
      logInfo "client command: ${command[*]}"
      [ "${#command[*]}" -eq 0 ] && continue
      echo "${#command[0]} ${command[0]}"
      [ "${command[0]}" = "quit" ] && return 0
   done
}

handleCommandArguments "" "${@}"
prepareCommonCommandOptions
cd "${dataDirectory}"

client="[${NCAT_REMOTE_ADDR}]:${NCAT_REMOTE_PORT}/${NCAT_PROTO}"
logInfo "client connected: ${client}"
monitorAlertFiles
handleClientCommands
logInfo "client disconnected: ${client}"

exit 0
