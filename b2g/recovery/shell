#!/usr/bin/sh

set -e
set -o ignoreeof
umask 022

programName="rsh"

programMessage() {
  local message="${1}"

  echo >&2 "${programName}: ${message}"
}

getVariable() {
  eval 'echo ${'"${1}"'}'
}

setVariable() {
  eval "${1}='${2}'"
}

getReply() {
  local prompt="${1}"
  shift 1

  read -p "${prompt}" -- "${@}" || {
    echo >&2 ""
    programMessage "end of file"
    exit 1
  }
}

confirmAction() {
  local action="${1}"

  while true
  do
    getReply "${action}? "

    case "${REPLY}"
    in
      yes|ye|y) return 0;;
      no|n) return 1;;
      *) programMessage "unrecognized confirmation: ${REPLY}";;
    esac
  done
}

stopBraille() {
  braille stop
  sleep 5
}

startBraille() {
  braille start
}

actionCount=0
nameWidth=0

addAction() {
  local name="${1}"
  local description="${2}"

  setVariable "name_$((actionCount))" "${name}"
  setVariable "description_${actionCount}" "${description}"

  [ "${#name}" -le "${nameWidth}" ] || nameWidth="${#name}"
  local alias="${name}"

  while [ "${#alias}" -gt 0 ]
  do
    setVariable "alias_${alias}" "${actionCount}"
    alias="${alias:0:$((${#alias} - 1))}"
  done

  let "actionCount += 1"
}

showActions() {
  echo ""
  echo "Choose an action:"
  local actionIndex=0

  while [ "${actionIndex}" -lt "${actionCount}" ]
  do
    local name="$(getVariable "name_${actionIndex}")"
    local line="${name}"

    while [ "${#line}" -lt "${nameWidth}" ]
    do
      line="${line} "
    done

    line="${line}  $(getVariable "description_${actionIndex}")"
    echo "${line}"
    
    let "actionIndex += 1"
  done
}

performActions() {
  while true
  do
    getReply "action> "
    if [ -z "${REPLY}" ]
    then
      showActions
    else
      local actionIndex="$(getVariable "alias_${REPLY}")"

      if [ -n "${actionIndex}" ]
      then
        local name="$(getVariable "name_${actionIndex}")"
        eval "performAction_${name}"
      else
        programMessage "unrecognized action: ${REPLY}"
      fi
    fi
  done
}

performAction_boot() {
  if confirmAction "boot system"
  then
    reboot -f
  else
    programMessage "boot cancelled"
  fi
}
addAction boot "boot main system"

performAction_cache() {
  if confirmAction "wipe cache"
  then
    stopBraille
    recovery --wipe_cache
    startBraille
  else
    programMessage "wipe cancelled"
  fi
}
addAction cache "wipe cache partition"

performAction_data() {
  if confirmAction "wipe data"
  then
    stopBraille
    recovery --wipe_data
    startBraille
  else
    programMessage "wipe cancelled"
  fi
}
addAction data "wipe data partition (factory reset)"

performAction_exit() {
  if confirmAction "exit menu"
  then
    programMessage "menu exited"
    exit 0
  else
    programMessage "exit cancelled"
  fi
}
addAction exit "exit this menu"

performAction_shell() {
  PS1="${programName}:\W# " /usr/bin/sh || :
}
addAction shell "start interactive shell"

echo "Recovery Mode Menu"
showActions
performActions
exit 0
